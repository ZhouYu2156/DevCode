import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.yVxbj29m.js";
const __pageData = JSON.parse('{"title":"HTML进阶知识","description":"","frontmatter":{},"headers":[],"relativePath":"notes/前端/HTML进阶/index.md","filePath":"notes/前端/HTML进阶/index.md","lastUpdated":null}');
const _sfc_main = { name: "notes/前端/HTML进阶/index.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="html进阶知识" tabindex="-1">HTML进阶知识 <a class="header-anchor" href="#html进阶知识" aria-label="Permalink to &quot;HTML进阶知识&quot;">​</a></h1><h2 id="音-视频元素" tabindex="-1">音/视频元素 <a class="header-anchor" href="#音-视频元素" aria-label="Permalink to &quot;音/视频元素&quot;">​</a></h2><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&lt;</span><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">audio</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> src</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">=</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&quot;&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> controls</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> autoplay</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> muted</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> loop</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&gt;&lt;/</span><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">audio</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&lt;</span><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">video</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> src</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">=</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">&quot;&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> controls</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> autoplay</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> muted</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> loop</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&gt;&lt;/</span><span style="${ssrRenderStyle({ "--shiki-light": "#22863A", "--shiki-dark": "#85E89D" })}">video</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>常用属性:</li></ul><table><thead><tr><th style="${ssrRenderStyle({ "text-align": "center" })}">属性名</th><th style="${ssrRenderStyle({ "text-align": "center" })}">定义</th><th style="${ssrRenderStyle({ "text-align": "center" })}">类型</th></tr></thead><tbody><tr><td style="${ssrRenderStyle({ "text-align": "center" })}">src</td><td style="${ssrRenderStyle({ "text-align": "center" })}">多媒体资源路径</td><td style="${ssrRenderStyle({ "text-align": "center" })}">普通属性</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "center" })}">controls</td><td style="${ssrRenderStyle({ "text-align": "center" })}">是否显示播放控件</td><td style="${ssrRenderStyle({ "text-align": "center" })}">布尔属性</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "center" })}">autoplay</td><td style="${ssrRenderStyle({ "text-align": "center" })}">是否自动播放</td><td style="${ssrRenderStyle({ "text-align": "center" })}">布尔属性</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "center" })}">loop</td><td style="${ssrRenderStyle({ "text-align": "center" })}">循环播放</td><td style="${ssrRenderStyle({ "text-align": "center" })}">布尔属性</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "center" })}">muted</td><td style="${ssrRenderStyle({ "text-align": "center" })}">静音播放</td><td style="${ssrRenderStyle({ "text-align": "center" })}">布尔属性</td></tr></tbody></table></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("notes/前端/HTML进阶/index.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const index = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  index as default
};
