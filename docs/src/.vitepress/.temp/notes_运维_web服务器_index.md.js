import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.yVxbj29m.js";
const __pageData = JSON.parse('{"title":"前置条件","description":"","frontmatter":{},"headers":[],"relativePath":"notes/运维/web服务器/index.md","filePath":"notes/运维/web服务器/index.md","lastUpdated":null}');
const _sfc_main = { name: "notes/运维/web服务器/index.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="前置条件" tabindex="-1">前置条件 <a class="header-anchor" href="#前置条件" aria-label="Permalink to &quot;前置条件&quot;">​</a></h1><h2 id="配置静态ip" tabindex="-1">配置静态IP <a class="header-anchor" href="#配置静态ip" aria-label="Permalink to &quot;配置静态IP&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}"># 一键配置 静态IP地址 并 启用</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">nmcli</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> c add type ethernet con-name &quot;static_conn&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> ifname ens160 ipv4.addresses </span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">192.168</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">.232.20/24 gw4 </span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">192.168</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">.232.2 ipv4.dns &quot;8.8.8.8 114.114.114.114&quot;</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> ipv4.method manual autoconnect yes </span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">&amp;&amp; </span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">nmcli</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> c up static_conn</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="关闭防火墙" tabindex="-1">关闭防火墙 <a class="header-anchor" href="#关闭防火墙" aria-label="Permalink to &quot;关闭防火墙&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">$</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> systemctl stop firewalld      # 本次开机关闭防火墙（重新开机防火墙又会启动）</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">$</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> systemctl disable firewalld   # 永久禁用防火墙（以后不会再自动启动了）</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">$</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> systemctl enable firewalld    # 开机自启（解开禁止启用）</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">$</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> systemctl start firewalld     # 本次立即启动防火墙</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="关闭-selinux-安全策略" tabindex="-1">关闭 SELinux 安全策略 <a class="header-anchor" href="#关闭-selinux-安全策略" aria-label="Permalink to &quot;关闭 SELinux 安全策略&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">$</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> setenforce </span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">0</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">      # 临时关闭安全策略</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">$</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> getenforce        # 查看当前 selinux 状态</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">(</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">enforcing</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> 表示防御状态，Permission表示允许，disabled 表示关闭状态</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">$</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> sed -i &#39;s/^SELINUX=enforcing$/SELINUX=disabled/&#39;</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> /etc/selinux/config      # 永久关闭安全策略</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="网络配置" tabindex="-1">网络配置 <a class="header-anchor" href="#网络配置" aria-label="Permalink to &quot;网络配置&quot;">​</a></h2><blockquote><ul><li>路径: <code>/etc/sysconfig/network-scripts/ifcfg-ens33</code></li><li>使用上面的<code>一键配置静态IP</code>的方式更方便</li></ul></blockquote><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>TYPE=Ethernet       # 网卡类型，指明该配置对应的是以太网接口</span></span>
<span class="line"><span>PROXY_METHOD=none   # 代理方法设置，none 表示不使用代理</span></span>
<span class="line"><span>BROWSER_ONLY=no     # 是否仅为浏览器配置网络，no 表示否，对所有应用生效</span></span>
<span class="line"><span>BOOTPROTO=static    # IP地址分配方式，static表示使用静态IP地址，其他可选值包括dhcp（动态分配）和none</span></span>
<span class="line"><span>DEFROUTE=yes        # 是否作为默认路由，默认yes，意味着此设备可用作到达其他网络的路由</span></span>
<span class="line"><span>IPV4_FAILURE_FATAL=yes # IPv4配置失败是否致命，yes表示是，即IPv4配置失败会导致网络服务启动失败</span></span>
<span class="line"><span>IPV6INIT=yes         # 是否启用IPv6初始化，yes表示启用</span></span>
<span class="line"><span>IPV6_AUTOCONF=yes   # 是否启用IPv6自动配置，yes表示启用</span></span>
<span class="line"><span>IPV6_DEFROUTE=yes    # 是否将该设备作为IPv6默认路由，默认yes</span></span>
<span class="line"><span>IPV6_FAILURE_FATAL=no # IPv6配置失败是否致命，no表示否，即使IPv6配置失败也不会阻止网络服务启动</span></span>
<span class="line"><span>IPV6_ADDR_GEN_MODE=stable-privacy # IPv6地址生成模式，stable-privacy表示生成稳定且具有隐私保护的地址</span></span>
<span class="line"><span>NAME=ens33          # 网络接口名称</span></span>
<span class="line"><span>UUID=10ac735e-0b8f-4b19-9747-ff28b58a1547 # 唯一标识符，用于唯一标示该网络接口配置</span></span>
<span class="line"><span>DEVICE=ens33        # 指定物理设备名称，与NAME字段相同，进一步确认配置的设备</span></span>
<span class="line"><span>ONBOOT=yes           # 系统启动时是否激活此网络接口，yes表示系统启动时自动启用该网卡</span></span>
<span class="line"><span>IPADDR=192.168.232.20 # 指定了使用静态IP后，就要在这里指定该字段自己分配一个静态IP地址</span></span>
<span class="line"><span>NETMASK=255.255.255.0 # 指定子网掩码</span></span>
<span class="line"><span>GATEWAY=192.168.232.2 # 指定网关</span></span>
<span class="line"><span>DNS1=8.8.8.8        # 指定DNS服务器</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><blockquote><ul><li>编辑完成并保存后, 使用命令<code>systemctl restart network</code>重启网络服务</li></ul></blockquote></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("notes/运维/web服务器/index.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const index = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  index as default
};
